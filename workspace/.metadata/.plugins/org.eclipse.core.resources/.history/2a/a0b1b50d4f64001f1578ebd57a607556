package test.controller;

import test.entity.Employee;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;

public class TestProperties {

	public static void main(String[] args) {
		TestProperties test = new TestProperties();
		Properties prop = new Properties();

		Employee[] employees = test.readFile(prop);
		test.printConsole(prop);
		test.addEmpData(prop);
		test.printConsole(prop);
		test.saveEmpXML(employees);
	}

	// "empData.txt" 파일에서 데이터를 읽어와 Employee 객체 배열로 반환
	public Employee[] readFile(Properties p) {
		try (FileInputStream fis = new FileInputStream("empData.txt")) {
			p.load(fis);
		} catch (IOException e) {
			e.printStackTrace();
		}

		Employee[] employees = new Employee[p.size()];
		int index = 0;

		for (String key : p.stringPropertyNames()) {
			String[] values = p.getProperty(key).split(", ");
			int eId = Integer.parseInt(key);
			String eName = values[0];
			String dept = values[1];
			int salary = Integer.parseInt(values[2]);
			double bonusPoint = Double.parseDouble(values[3]);

			employees[index++] = new Employee(eId, eName, dept, salary, bonusPoint);
		}

		return employees;
	}

	// Properties 객체에 데이터를 추가하는 메소드
	public void addEmpData(Properties p) {
		p.setProperty("20230801", "이순신, 개발부, 45000000, 0.15");
		p.setProperty("20230802", "강감찬, 마케팅부, 50000000, 0.25");
	}

	// Properties 객체의 내용을 콘솔에 출력하는 메소드
	public void printConsole(Properties p) {
		System.out.println("Employee Data:");
		for (String key : p.stringPropertyNames()) {
			System.out.println(key + " => " + p.getProperty(key));
		}
	}

	// Employee 객체 배열의 데이터를 XML 파일로 저장하는 메소드
	public void saveEmpXML(Employee[] er) {
		Properties prop = new Properties();

		for (Employee emp : er) {
			int finalSalary = emp.getSalary() + (int) (emp.getSalary() * emp.getBonusPoint());
			String value = emp.geteName() + ", " + emp.getDept() + ", " + emp.getSalary() + ", " + emp.getBonusPoint()
					+ ", " + finalSalary;
			prop.setProperty(String.valueOf(emp.geteId()), value);
		}

		try (FileOutputStream fos = new FileOutputStream("empResult.xml")) {
			prop.storeToXML(fos, "Employee Data with Bonus");
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
