package book.mvc.model.dao;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import book.mvc.model.vo.Book;
import common.JDBCTemp;

public class BookDao {

    // 도서 추가
    public int insertBook(Book b) {
        String query = "INSERT INTO Book VALUES(seq_bid.NEXTVAL, ?, ?, ?, ?, ?)";
        try (Connection conn = JDBCTemp.getInstance().getConnection();
             PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setString(1, b.getTitle());
            pstmt.setString(2, b.getAuthor());
            pstmt.setString(3, b.getPublisher());
            pstmt.setDate(4, b.getPublishDate());
            pstmt.setDouble(5, b.getPrice());
            return pstmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return 0;
    }

    // 도서 수정
    public int updateBook(Book b) {
        String query = "UPDATE Book SET title=?, author=?, publisher=?, publish_date=?, price=? WHERE book_id=?";
        try (Connection conn = JDBCTemp.getInstance().getConnection();
             PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setString(1, b.getTitle());
            pstmt.setString(2, b.getAuthor());
            pstmt.setString(3, b.getPublisher());
            pstmt.setDate(4, b.getPublishDate());
            pstmt.setDouble(5, b.getPrice());
            pstmt.setInt(6, b.getBookId());
            return pstmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return 0;
    }

    // 도서 삭제
    public int deleteBook(int bookId) {
        String query = "DELETE FROM Book WHERE book_id=?";
        try (Connection conn = JDBCTemp.getInstance().getConnection();
             PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setInt(1, bookId);
            return pstmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return 0;
    }

    // 모든 도서 조회
    public ArrayList
